from fastapi import FastAPI
from fastapi.staticfiles import StaticFiles
from pathlib import Path
import sys
import uvicorn

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º config —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
from src.core.config import init_config

# –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∂–∏–º –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
env = sys.argv[1] if len(sys.argv) > 1 else None

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
config = init_config(env)

app = FastAPI(
    title="Vet Clinic API",
    description="API –¥–ª—è –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä–Ω–æ–π –∫–ª–∏–Ω–∏–∫–∏",
    version="1.0.0",
    debug=config.DEBUG
)

# Mount static files
BASE_DIR = Path(__file__).resolve().parent
app.mount("/static", StaticFiles(directory=str(BASE_DIR / "static")), name="static")

# Include routers
from src.views.main import router as main_router

app.include_router(main_router)


@app.get("/api/health")
async def health_check():
    return {
        "status": "healthy",
        "message": "Vet Clinic API is running",
        "environment": config.ENV,
        "debug": config.DEBUG
    }


# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ Vet Clinic API...")
    print(f"üìä –†–µ–∂–∏–º: {config.ENV}")
    print(f"üêõ Debug: {config.DEBUG}")
    print(f"üóÑÔ∏è  DB Echo: {config.DB_ECHO}")
    print(f"üîó Database: {config.DATABASE_URL}")
    print(f"üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/api/docs")
    print(f"üåê –ì–ª–∞–≤–Ω–∞—è: http://localhost:8000/")

    # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ uvicorn —Å reload
    if config.DEBUG:
        # Development —Ä–µ–∂–∏–º - —Å reload
        uvicorn.run(
            "src.main:app",  # –ü–µ—Ä–µ–¥–∞–µ–º –∫–∞–∫ —Å—Ç—Ä–æ–∫—É –∏–º–ø–æ—Ä—Ç–∞
            host="0.0.0.0",
            port=8000,
            reload=True,
            log_level="debug"
        )
    else:
        # Production/Testing —Ä–µ–∂–∏–º - –±–µ–∑ reload
        uvicorn.run(
            app,  # –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç
            host="0.0.0.0",
            port=8000,
            log_level="info"
        )